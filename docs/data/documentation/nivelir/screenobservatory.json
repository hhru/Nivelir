{"seeAlsoSections":[{"title":"Navigator","identifiers":["doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenNavigator","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenLogger","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/DefaultScreenLogger","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenIterator","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/DefaultScreenIterator","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenIterationResult","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenIterationPredicate","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenWindowProvider","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenKeyWindowProvider","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenCustomWindowProvider","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/DefaultScreenObservatory"],"generated":true}],"schemaVersion":{"major":0,"minor":2,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenObservatory"}],"title":"ScreenObservatory","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:7Nivelir17ScreenObservatoryP","modules":[{"name":"Nivelir"}],"navigatorTitle":[{"kind":"identifier","text":"ScreenObservatory"}]},"abstract":[{"type":"text","text":"A type that adds observers for subscribe to notifications from observation."}],"sections":[],"identifier":{"url":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/DefaultScreenObservatory"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory\/observation(of:iterator:)","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory\/observe(by:where:)","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory\/observe(by:where:weakly:)","doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory\/observeWeakly(by:where:)"]}],"variants":[{"paths":["\/documentation\/nivelir\/screenobservatory"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenObservatory"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"With "},{"type":"codeVoice","code":"ScreenObservatory"},{"type":"text","text":", any screen can observe changes of another screen using an observer."},{"type":"text","text":" "},{"type":"text","text":"The observer can be the "},{"type":"codeVoice","code":"UIViewController"},{"type":"text","text":" itself, which wants to receive new notifications,"},{"type":"text","text":" "},{"type":"text","text":"or for example in case of using MVVM architecture,"},{"type":"text","text":" "},{"type":"text","text":"the observer can be a ViewModel (or Presenter for VIPER)."},{"type":"text","text":" "},{"type":"text","text":"In this case ViewModel\/Presenter will receive new notifications and perform necessary business logic."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In usual cases, a closure or delegate is passed to receive changes from a screen."},{"type":"text","text":" "},{"type":"text","text":"But if the navigation is a chain of screens,"},{"type":"text","text":" "},{"type":"text","text":"then passing closure\/delegate from the first to the last screen through all screens in the chain is difficult."},{"type":"text","text":" "},{"type":"text","text":"And such a chain is difficult to collect via deeplink."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, we have three screens: "},{"type":"codeVoice","code":"EmployerReviewList"},{"type":"text","text":", "},{"type":"codeVoice","code":"EmployerReview"},{"type":"text","text":", "},{"type":"codeVoice","code":"EmployerReviewDeletion"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"EmployerReviewList"},{"type":"text","text":" shows "},{"type":"codeVoice","code":"EmployerReview"},{"type":"text","text":" and "},{"type":"codeVoice","code":"EmployerReviewDeletion"},{"type":"text","text":" screen,"},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"EmployerReview"},{"type":"text","text":" can show "},{"type":"codeVoice","code":"EmployerReviewDeletion"},{"type":"text","text":". This results in the following diagram:"}]},{"type":"codeListing","syntax":null,"code":["EmployerReviewList ---------------> EmployerReview","        |                                   |","        |                                   |","         ----> EmployerReviewDeletion <-----"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EmployerReview"},{"type":"text","text":" and "},{"type":"codeVoice","code":"EmployerReviewList"},{"type":"text","text":" should update their data when the "},{"type":"codeVoice","code":"EmployerReviewDeletion"},{"type":"text","text":" screen changes."},{"type":"text","text":" "},{"type":"text","text":"Such a chain is difficult to maintain and difficult to implement when opening screens through a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/Deeplink"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Instead, "},{"type":"codeVoice","code":"EmployerReview"},{"type":"text","text":" and "},{"type":"codeVoice","code":"EmployerReviewList"},{"type":"text","text":" can become observers of the "},{"type":"codeVoice","code":"EmployerReviewDeletion"},{"type":"text","text":" screen."},{"type":"text","text":" "},{"type":"text","text":"To do this, you need to create a protocol for "},{"type":"codeVoice","code":"EmployerReviewDeletion"},{"type":"text","text":" screen observers:"}]},{"type":"codeListing","syntax":"swift","code":["protocol EmployerReviewDeletionObserver: ScreenObserver {","    func employerReviewDeleted(employerReviewID: Int)","}"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EmployerReviewDeletion"},{"type":"text","text":" will notify its observers that a employer review with a specific ID has been deleted."},{"type":"text","text":" "},{"type":"text","text":"To send a notification to observers, use "},{"type":"codeVoice","code":"ScreenObservation"},{"type":"text","text":", which is available when building a screen:"}]},{"type":"codeListing","syntax":"swift","code":["struct EmployerReviewDeletionScreen: Screen {","    func build(","        navigator: ScreenNavigator,","        observation: ScreenObservation<EmployerReviewDeletionObserver> \/\/ <---","    ) -> UIViewController {","        \/\/ Configure dependencies for the UIViewController.","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ScreenObservation"},{"type":"text","text":" can be passed to, for example,"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"UIViewController"},{"type":"text","text":" or the ViewModel\/Presenter."},{"type":"text","text":" "},{"type":"text","text":"To send a notification, use the "},{"type":"codeVoice","code":"notify(_:)"},{"type":"text","text":" method:"}]},{"type":"codeListing","syntax":"swift","code":["let observation: ScreenObservation<EmployerReviewDeletionObserver>","","observation.notify { observer in","    observer.employerReviewDeleted(employerReviewID: 2)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or you can use the short syntax due to the "},{"type":"codeVoice","code":"callAsFunction(_:)"},{"type":"text","text":" function:"}]},{"type":"codeListing","syntax":"swift","code":["let observation: ScreenObservation<EmployerReviewDeletionObserver>","","observation { observer in","    observer.employerReviewDeleted(employerReviewID: 2)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now in order for the "},{"type":"codeVoice","code":"EmployerReviewList"},{"type":"text","text":" and "},{"type":"codeVoice","code":"EmployerReview"},{"type":"text","text":" screens"},{"type":"text","text":" "},{"type":"text","text":"to start observing the "},{"type":"codeVoice","code":"EmployerReviewDeletion"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"EmployerReviewDeletionObserver"},{"type":"text","text":" protocol must be implemented."},{"type":"text","text":" "},{"type":"text","text":"It can be implemented by, for example, "},{"type":"codeVoice","code":"UIViewController"},{"type":"text","text":" or ViewModel\/Presenter."},{"type":"text","text":" "},{"type":"text","text":"After that, you need to add an observer to observatory using one of the "},{"type":"codeVoice","code":"ScreenObservatory"},{"type":"text","text":" methods,"},{"type":"text","text":" "},{"type":"text","text":"where the class implementing the "},{"type":"codeVoice","code":"EmployerReviewDeletionObserver"},{"type":"text","text":" protocol is passed in the "},{"type":"codeVoice","code":"observer"},{"type":"text","text":" parameter."},{"type":"text","text":" "},{"type":"text","text":"For observers, the "},{"type":"codeVoice","code":"employerReviewDeleted(employerReviewID:)"},{"type":"text","text":" method"},{"type":"text","text":" "},{"type":"text","text":"will be called as soon as the observation notifies it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Thus, we subscribed several observers for one screen."}]}]}],"references":{"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenIterationPredicate":{"role":"symbol","title":"ScreenIterationPredicate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenIterationPredicate"}],"abstract":[{"type":"text","text":"A closure box that takes a container as its argument and returns a "},{"type":"codeVoice","code":"ScreenIterationResult"},{"type":"text","text":" value,"},{"type":"text","text":" "},{"type":"text","text":"indicating whether to continue or stop iterating."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenIterationPredicate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScreenIterationPredicate"}],"url":"\/documentation\/nivelir\/screeniterationpredicate"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenKeyWindowProvider":{"role":"symbol","title":"ScreenKeyWindowProvider","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenKeyWindowProvider"}],"abstract":[{"type":"text","text":"An implementation of "},{"type":"codeVoice","code":"ScreenWindowProvider"},{"type":"text","text":" providing the first found key "},{"type":"codeVoice","code":"UIWindow"},{"type":"text","text":"."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenKeyWindowProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScreenKeyWindowProvider"}],"url":"\/documentation\/nivelir\/screenkeywindowprovider"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenCustomWindowProvider":{"role":"symbol","title":"ScreenCustomWindowProvider","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenCustomWindowProvider"}],"abstract":[{"type":"text","text":"An implementation of "},{"type":"codeVoice","code":"ScreenWindowProvider"},{"type":"text","text":" that provides a "},{"type":"codeVoice","code":"UIWindow"},{"type":"text","text":" explicitly passed through the initializer."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenCustomWindowProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScreenCustomWindowProvider"}],"url":"\/documentation\/nivelir\/screencustomwindowprovider"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenWindowProvider":{"role":"symbol","title":"ScreenWindowProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenWindowProvider"}],"abstract":[{"type":"text","text":"A type that provides an instance of "},{"type":"codeVoice","code":"UIWindow"},{"type":"text","text":" for navigating and searching containers."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenWindowProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScreenWindowProvider"}],"url":"\/documentation\/nivelir\/screenwindowprovider"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenObservatory/observe(by:where:weakly:)":{"role":"symbol","title":"observe(by:where:weakly:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScreenObserver","preciseIdentifier":"s:7Nivelir14ScreenObserverP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"where"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScreenObserverPredicate","preciseIdentifier":"s:7Nivelir23ScreenObserverPredicateV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"weakly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ScreenObserverToken","preciseIdentifier":"s:7Nivelir19ScreenObserverTokenC"}],"abstract":[{"type":"text","text":"Observing containers by an observer."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory\/observe(by:where:weakly:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/nivelir\/screenobservatory\/observe(by:where:weakly:)"},"doc://ru.hh.Nivelir/documentation/Nivelir/DefaultScreenLogger":{"role":"symbol","title":"DefaultScreenLogger","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultScreenLogger"}],"abstract":[{"type":"text","text":"Default Logger implementation."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/DefaultScreenLogger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultScreenLogger"}],"url":"\/documentation\/nivelir\/defaultscreenlogger"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenObservatory/observation(of:iterator:)":{"role":"symbol","title":"observation(of:iterator:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observation"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Observer"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Observer","preciseIdentifier":"s:7Nivelir17ScreenObservatoryP11observation2of8iteratorAA0B11ObservationCyqd__Gqd__m_AA0B8Iterator_ptlF8ObserverL_qd__mfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"iterator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScreenIterator","preciseIdentifier":"s:7Nivelir14ScreenIteratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ScreenObservation","preciseIdentifier":"s:7Nivelir17ScreenObservationC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Observer","preciseIdentifier":"s:7Nivelir17ScreenObservatoryP11observation2of8iteratorAA0B11ObservationCyqd__Gqd__m_AA0B8Iterator_ptlF8ObserverL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"codeVoice","code":"ScreenObservation"},{"type":"text","text":", which sends notifications to subscribed observers."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory\/observation(of:iterator:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/nivelir\/screenobservatory\/observation(of:iterator:)"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenIterator":{"role":"symbol","title":"ScreenIterator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenIterator"}],"abstract":[{"type":"text","text":"A type that iterates and searches through containers of screens with a given predicate."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenIterator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScreenIterator"}],"url":"\/documentation\/nivelir\/screeniterator"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenLogger":{"role":"symbol","title":"ScreenLogger","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenLogger"}],"abstract":[{"type":"text","text":"Screen navigation logger."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenLogger","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScreenLogger"}],"url":"\/documentation\/nivelir\/screenlogger"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenObservatory/observe(by:where:)":{"role":"symbol","title":"observe(by:where:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observe"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScreenObserver","preciseIdentifier":"s:7Nivelir14ScreenObserverP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"where"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScreenObserverPredicate","preciseIdentifier":"s:7Nivelir23ScreenObserverPredicateV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ScreenObserverToken","preciseIdentifier":"s:7Nivelir19ScreenObserverTokenC"}],"abstract":[{"type":"text","text":"Observing containers by an observer."},{"type":"text","text":" "},{"type":"text","text":"Еhe observer will receive new notifications and is captured by the "},{"type":"strong","inlineContent":[{"type":"text","text":"strong reference"}]},{"type":"text","text":" "},{"type":"text","text":"until the "},{"type":"codeVoice","code":"cancel()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"deinit"},{"type":"text","text":" method of the "},{"type":"codeVoice","code":"ScreenObserverToken"},{"type":"text","text":" is called"}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory\/observe(by:where:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/nivelir\/screenobservatory\/observe(by:where:)"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenObservatory/observeWeakly(by:where:)":{"role":"symbol","title":"observeWeakly(by:where:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"observeWeakly"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScreenObserver","preciseIdentifier":"s:7Nivelir14ScreenObserverP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"where"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScreenObserverPredicate","preciseIdentifier":"s:7Nivelir23ScreenObserverPredicateV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Observing containers by an observer."},{"type":"text","text":" "},{"type":"text","text":"The observer will receive new notifications until the end of its life cycle."},{"type":"text","text":" "},{"type":"text","text":"After the observer is deinited, it will stop receiving new notifications."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory\/observeWeakly(by:where:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/nivelir\/screenobservatory\/observeweakly(by:where:)"},"doc://ru.hh.Nivelir/documentation/Nivelir":{"role":"collection","title":"Nivelir","abstract":[{"type":"text","text":"A Swift DSL for navigation in iOS and tvOS apps with a simplified, chainable, and compile time safe syntax."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir","kind":"symbol","type":"topic","url":"\/documentation\/nivelir"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenObservatory":{"role":"symbol","title":"ScreenObservatory","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenObservatory"}],"abstract":[{"type":"text","text":"A type that adds observers for subscribe to notifications from observation."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenObservatory","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScreenObservatory"}],"url":"\/documentation\/nivelir\/screenobservatory"},"doc://ru.hh.Nivelir/documentation/Nivelir/Deeplink":{"role":"symbol","title":"Deeplink","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deeplink"}],"abstract":[{"type":"text","text":"A type describing the navigation of a deep link."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/Deeplink","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Deeplink"}],"url":"\/documentation\/nivelir\/deeplink"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenIterationResult":{"role":"symbol","title":"ScreenIterationResult","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenIterationResult"}],"abstract":[{"type":"text","text":"A value that represents either a continuation or a stop iteration,"},{"type":"text","text":" "},{"type":"text","text":"including the associated container value in each case."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenIterationResult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScreenIterationResult"}],"url":"\/documentation\/nivelir\/screeniterationresult"},"doc://ru.hh.Nivelir/documentation/Nivelir/DefaultScreenIterator":{"role":"symbol","title":"DefaultScreenIterator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultScreenIterator"}],"abstract":[{"type":"text","text":"Default implementation of the "},{"type":"codeVoice","code":"ScreenIterator"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Iterating over all standard container types from UIKit — "},{"type":"codeVoice","code":"UIWindow"},{"type":"text","text":", "},{"type":"codeVoice","code":"UIViewController"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"UINavigationController"},{"type":"text","text":", "},{"type":"codeVoice","code":"UITabBarController"},{"type":"text","text":"."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/DefaultScreenIterator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultScreenIterator"}],"url":"\/documentation\/nivelir\/defaultscreeniterator"},"doc://ru.hh.Nivelir/documentation/Nivelir/ScreenNavigator":{"role":"symbol","title":"ScreenNavigator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScreenNavigator"}],"abstract":[{"type":"text","text":"The navigator is a facade and combines the features of Nivelir for easy navigation."}],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/ScreenNavigator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScreenNavigator"}],"url":"\/documentation\/nivelir\/screennavigator"},"doc://ru.hh.Nivelir/documentation/Nivelir/DefaultScreenObservatory":{"role":"symbol","title":"DefaultScreenObservatory","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultScreenObservatory"}],"abstract":[],"identifier":"doc:\/\/ru.hh.Nivelir\/documentation\/Nivelir\/DefaultScreenObservatory","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultScreenObservatory"}],"url":"\/documentation\/nivelir\/defaultscreenobservatory"}}}